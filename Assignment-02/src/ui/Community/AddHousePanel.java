/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Community;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.City;
import model.Community;
import model.House;
import static ui.Community.AddCommunityPanel.communitiesListForCity;

/**
 *
 * @author varshareddykumbham
 */
public class AddHousePanel extends javax.swing.JPanel {

    /**
     * Creates new form AddHousePanel
     */
    int flag;
    DefaultTableModel tblModel;
    public static ArrayList<House> houses = new ArrayList<>();
    public static List<House> housesListForCommunity;
    public void setCityCombobox(){
        jComboBoxHouseCity.removeAllItems();
        jComboBoxHouseCity_update.removeAllItems();
        for(City city: AddCityPanel.cities){
            jComboBoxHouseCity.addItem(city.getCityName());
            jComboBoxHouseCity_update.addItem(city.getCityName());
        }
    }
    public void setCommunityCombobox(){
        jComboBoxHouseCommunity.removeAllItems();
        jComboBoxHouseCommunity_update.removeAllItems();
        for(Community community: AddCommunityPanel.communities){
            jComboBoxHouseCommunity.addItem(community.getCommunityName());
            jComboBoxHouseCommunity_update.addItem(community.getCommunityName());
        }
    }
    public AddHousePanel() {
        initComponents();
        setCityCombobox();
        setCommunityCombobox();
         tblModel = (DefaultTableModel)tableHouses.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfHouseNo = new javax.swing.JTextField();
        tfPostalCode = new javax.swing.JTextField();
        btnAddHospital = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHouses = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfHouseNo_update = new javax.swing.JTextField();
        tfPostalCode_update = new javax.swing.JTextField();
        jButtonHouseView = new javax.swing.JButton();
        jButtonHouseEdit = new javax.swing.JButton();
        jButtonHouseUpdate = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxHouseCity = new javax.swing.JComboBox<>();
        jComboBoxHouseCommunity = new javax.swing.JComboBox<>();
        jComboBoxHouseCity_update = new javax.swing.JComboBox<>();
        jComboBoxHouseCommunity_update = new javax.swing.JComboBox<>();

        jLabel1.setText("House No :");

        jLabel2.setText("City");

        jLabel3.setText("Community");

        jLabel4.setText("PostalCode");

        tfHouseNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHouseNoActionPerformed(evt);
            }
        });

        btnAddHospital.setText("Add House");
        btnAddHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHospitalActionPerformed(evt);
            }
        });

        tableHouses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "House No.", "City", "Community", "PostalCode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableHouses);

        jLabel5.setText("House No :");

        jLabel6.setText("City");

        jLabel7.setText("Community");

        jLabel8.setText("PostalCode");

        jButtonHouseView.setText("View");
        jButtonHouseView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHouseViewActionPerformed(evt);
            }
        });

        jButtonHouseEdit.setText("Edit");
        jButtonHouseEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHouseEditActionPerformed(evt);
            }
        });

        jButtonHouseUpdate.setText("Update");
        jButtonHouseUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHouseUpdateActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel9.setText("Update Details: ");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.setOpaque(true);

        jComboBoxHouseCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxHouseCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHouseCityActionPerformed(evt);
            }
        });

        jComboBoxHouseCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxHouseCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHouseCommunityActionPerformed(evt);
            }
        });

        jComboBoxHouseCity_update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxHouseCity_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHouseCity_updateActionPerformed(evt);
            }
        });

        jComboBoxHouseCommunity_update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxHouseCommunity_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHouseCommunity_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonHouseUpdate)
                        .addComponent(jLabel8)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAddHospital)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(39, 39, 39)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfHouseNo)
                                        .addComponent(tfPostalCode)
                                        .addComponent(tfHouseNo_update)
                                        .addComponent(tfPostalCode_update)
                                        .addComponent(jComboBoxHouseCity, 0, 80, Short.MAX_VALUE)
                                        .addComponent(jComboBoxHouseCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxHouseCity_update, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxHouseCommunity_update, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButtonHouseEdit)
                                        .addComponent(jButtonHouseView))
                                    .addGap(265, 265, 265)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(620, 620, 620)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxHouseCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxHouseCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddHospital))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfHouseNo_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonHouseView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jButtonHouseEdit)
                    .addComponent(jComboBoxHouseCity_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxHouseCommunity_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfPostalCode_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonHouseUpdate)
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfHouseNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHouseNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHouseNoActionPerformed

    private void jButtonHouseViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHouseViewActionPerformed
        // TODO add your handling code here:
        int row = tableHouses.getSelectedRow();
        try{
            TableModel model = tableHouses.getModel();
            String houseNo = model.getValueAt(row, 0).toString();
            String city = model.getValueAt(row, 1).toString();
            String community = model.getValueAt(row, 2).toString();
            String postalCode = model.getValueAt(row, 3).toString();
            
            tfHouseNo_update.setText(houseNo);
            tfHouseNo_update.setEditable(false);
            jComboBoxHouseCity_update.setEnabled(false);
            jComboBoxHouseCommunity_update.setEnabled(false);
            tfPostalCode_update.setText(postalCode);
            tfPostalCode_update.setEditable(false);   
        }
        catch(Exception e){
            if(row==-1) {
                JOptionPane.showMessageDialog(this,
                            "Please Select a row",
                            "Try Again",
                            JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jButtonHouseViewActionPerformed

    private void jButtonHouseUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHouseUpdateActionPerformed
        // TODO add your handling code here:
        if(tfHouseNo_update.getText().equals("")||tfPostalCode_update.getText().equals("")){
           JOptionPane.showMessageDialog(this, "Please enter All Data!");
        }
        String houseNo =  tfHouseNo_update.getText();
        String city = (String)jComboBoxHouseCity_update.getSelectedItem();
        String community = (String)jComboBoxHouseCommunity_update.getSelectedItem();
        Long postalCode =Long.valueOf(tfPostalCode_update.getText()); 
        DefaultTableModel tableModel = (DefaultTableModel) tableHouses.getModel();
        int row=tableHouses.getSelectedRow();
        tableModel.removeRow(row);
        Object[] data = {houseNo,community, city, postalCode }; 
        tableModel.insertRow(row, data);
        House updatedHouse = new House(houseNo,city,community,postalCode);
        for(House h: houses){
            if(h.getHouseNo().equals(houseNo)){
                int index = AddHousePanel.houses.indexOf(h);
                AddHousePanel.houses.remove(index);
                AddHousePanel.houses.add(index, updatedHouse);
                break;
            }
        }
        JOptionPane.showMessageDialog(this, "House Information updated!");
   
          
    }//GEN-LAST:event_jButtonHouseUpdateActionPerformed

    private void jButtonHouseEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHouseEditActionPerformed
        // TODO add your handling code here:
        tfHouseNo_update.setEditable(true);
        jComboBoxHouseCity_update.setEnabled(true);
        jComboBoxHouseCommunity_update.setEnabled(true);
        tfPostalCode_update.setEditable(true);  
    }//GEN-LAST:event_jButtonHouseEditActionPerformed

    private void btnAddHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHospitalActionPerformed
        // TODO add your handling code here:
        if(tfHouseNo.getText().equals("")||tfPostalCode.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter All Data!");
        }
        else{
            for(House h : houses){
                if(h.getHouseNo().equals(tfHouseNo.getText())){
                    JOptionPane.showMessageDialog(this, "HouseNo already exists!");
                    flag=1;
                }
            }
        }
        if(flag==0){
            String houseNo = tfHouseNo.getText();
            String city = (String)jComboBoxHouseCity.getSelectedItem();
            String community = (String)jComboBoxHouseCommunity.getSelectedItem();
            Long postalCode =Long.valueOf(tfPostalCode.getText());
            
            for(City c: AddCityPanel.cities) {
                 if(c.getCityName().equals(city)) {
                     communitiesListForCity =  c.getCommunities();
                     for(Community comm: communitiesListForCity) {
                         if(comm.getCommunityName().equals(community)) {
                             housesListForCommunity = comm.getHousesList();
                             housesListForCommunity.add(new House(houseNo, city, community, postalCode));
                             comm.setHousesList(housesListForCommunity);
                         }
                         else {
                             housesListForCommunity = new ArrayList();
                         }
                     }
                 }

             }

            House h = new House(houseNo,city,community,postalCode);
            houses.add(h);
            Object[] data = {houseNo,city,community, postalCode};
            tblModel.addRow(data);
            JOptionPane.showMessageDialog(this, "House information saved!");
        }
        tfHouseNo.setText("");
    }//GEN-LAST:event_btnAddHospitalActionPerformed

    private void jComboBoxHouseCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHouseCityActionPerformed
        // TODO add your handling code here:
        jComboBoxHouseCommunity.removeAllItems();
        String chosenCity = String.valueOf(jComboBoxHouseCity.getSelectedItem());
        for(City obj :  AddCityPanel.cities) {
            if(obj.getCityName().equals((chosenCity))) {
                for(Community comm: obj.getCommunities()) {
                    jComboBoxHouseCommunity.addItem(comm.getCommunityName());
                }
            }
        }
        
    }//GEN-LAST:event_jComboBoxHouseCityActionPerformed

    private void jComboBoxHouseCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHouseCommunityActionPerformed
        // TODO add your handling code here:
        String chosenCity = String.valueOf(jComboBoxHouseCity.getSelectedItem());
        String chosenCommunity = String.valueOf(jComboBoxHouseCommunity.getSelectedItem());
        System.out.print(chosenCity+" ");
        System.out.print(" "+chosenCommunity);
        for(City obj :  AddCityPanel.cities) {
            if(obj.getCityName().equals((chosenCity))) {
                for(Community comm: obj.getCommunities()) {
                    if(comm.getCommunityName().equals(chosenCommunity)) {
                        System.out.print(" "+comm.getPostalCode()+" ");
                        tfPostalCode.setText(comm.getPostalCode().toString());
                    }
                }
            }
        }
    }//GEN-LAST:event_jComboBoxHouseCommunityActionPerformed

    private void jComboBoxHouseCity_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHouseCity_updateActionPerformed
        // TODO add your handling code here:
        jComboBoxHouseCommunity_update.removeAllItems();
        String chosenCity = String.valueOf(jComboBoxHouseCity_update.getSelectedItem());
        for(City obj :  AddCityPanel.cities) {
            if(obj.getCityName().equals((chosenCity))) {
                for(Community comm: obj.getCommunities()) {
                    jComboBoxHouseCommunity_update.addItem(comm.getCommunityName());
                }
            }
        }
    }//GEN-LAST:event_jComboBoxHouseCity_updateActionPerformed

    private void jComboBoxHouseCommunity_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHouseCommunity_updateActionPerformed
        // TODO add your handling code here:
        String chosenCity = String.valueOf(jComboBoxHouseCity_update.getSelectedItem());
        String chosenCommunity = String.valueOf(jComboBoxHouseCommunity_update.getSelectedItem());
        System.out.print(chosenCity+" ");
        System.out.print(" "+chosenCommunity);
        for(City obj :  AddCityPanel.cities) {
            if(obj.getCityName().equals((chosenCity))) {
                for(Community comm: obj.getCommunities()) {
                    if(comm.getCommunityName().equals(chosenCommunity)) {
                        System.out.print(" "+comm.getPostalCode()+" ");
                        tfPostalCode_update.setText(comm.getPostalCode().toString());
                    }
                }
            }
        }
    }//GEN-LAST:event_jComboBoxHouseCommunity_updateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHospital;
    private javax.swing.JButton jButtonHouseEdit;
    private javax.swing.JButton jButtonHouseUpdate;
    private javax.swing.JButton jButtonHouseView;
    private javax.swing.JComboBox<String> jComboBoxHouseCity;
    private javax.swing.JComboBox<String> jComboBoxHouseCity_update;
    private javax.swing.JComboBox<String> jComboBoxHouseCommunity;
    private javax.swing.JComboBox<String> jComboBoxHouseCommunity_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableHouses;
    private javax.swing.JTextField tfHouseNo;
    private javax.swing.JTextField tfHouseNo_update;
    private javax.swing.JTextField tfPostalCode;
    private javax.swing.JTextField tfPostalCode_update;
    // End of variables declaration//GEN-END:variables
}
